name: Dining Manager CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
        
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{runner.os}}-${{hashFiles('requirements.txt')}}
          restore-keys: |
            pip-${{runner.os}}-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Django migrations
        run: python manage.py migrate
        working-directory: ./dining_manager
      
      - name: Run Django test
        run: python manage.py test
        working-directory: ./dining_manager

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/master'
    
  #   steps:
  #     - name: Check out the code
  #       uses: actions/checkout@v3

  #     # - name: Test SSH Connectivity
  #     #   run: |
  #     #     ssh -o StrictHostKeyChecking=no sourov@localhost "echo 'SSH connection successful'"

      
  #     - name: Copy files to the server
  #       uses: appleboy/scp-action@v0.1.1
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
  #         target: /var/www/dajngo_graphql
  #         source: ./ 
  #         port: 22                
  #         timeout: "30s"                           

  #     - name: Execute deploy commands over SSH
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           cd /var/www/dajngo_graphql
  #           source myenvenv/bin/activate
  #           cd /var/www/django_graphql/dining_manager
  #           python manage.py migrate
  #           python manage.py collectstatic --noinput
  #           sudo systemctl restart your-gunicorn-service
        